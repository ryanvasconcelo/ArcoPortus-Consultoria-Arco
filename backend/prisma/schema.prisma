// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // Quando 'output' é omitido, o padrão é 'node_modules/.prisma/client'
  // que é o local seguro e correto.
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Adicione este enum para categorizar os arquivos
enum FileType {
  DOCUMENT    // Para PDFs, Docs, etc.
  SPREADSHEET // Para CSV, XLSX
  CAMERA_DATA // Para arquivos específicos de câmeras
  OTHER       // Categoria genérica
}

model File {
  id          String   @id @default(uuid())
  name        String
  description String
  category    String   // <-- NOSSA NOVA ETIQUETA
  subcategory String?  // Adicione esta linha
  item        String?  // E esta linha
  path        String   
  size        Int
  mimetype    String
  type        FileType @default(OTHER)

  // --- Campos de Auditoria e Contexto ---
  uploadedById   String   // ID do usuário que fez o upload (vem do JWT)
  uploadedByName String?   // Nome do usuário que fez o upload (vem do JWT)

  // --- A CHAVE DA MULTILOCAÇÃO ---
  // Garante que todo arquivo pertence a uma empresa.
  companyId String   @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([companyId])
  @@unique([companyId, category, subcategory, item]) // <-- ESSA REGRA É ESSENCIAL E PERMANECE
  @@map("files")
}

// schema.prisma

model Camera {
  id        String  @id @default(uuid())
  name      String
  location  String?
  ipAddress String? @unique
  model     String?
  
  // --- NOVOS CAMPOS E AJUSTES ---
  fabricante     String?   // Mapeado de: "Fabricante"
  businessUnit   String?
  type           String?
  area           String?
  hasAnalytics   Boolean?
  recordingHours Float?
  deactivatedAt  DateTime? // <-- A CHAVE PARA "CONGELAR" O CONTADOR
  
  isActive  Boolean @default(true)

  // --- Chave Multi-Tenancy ---
  companyId String  @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([companyId])
  @@index([companyId, name])
  @@unique([companyId, ipAddress]) // IP é único por empresa
  @@map("cameras")
}

// --- MÓDULO DE AUDITORIA ---

// Enum para a regra de Severidade
enum LogSeverity {
  BAIXA
  MEDIA
  ALTA
}

model AuditLog {
  id        String    @id @default(uuid())
  action    String    // Ex: "LOGIN", "UPLOAD", "DELETE_ALL"
  module    String    // Ex: "AUTH", "FILES", "CFTV"
  target    String?   // Ex: "legislacao", "camera_x", "Arlison"
  details   String    @db.Text 
  severity  LogSeverity
  // ip        String?   // Removido conforme regra
  userId    String    
  userName  String    
  userRole  String    
  
  // --- MUDANÇA 1: ADICIONADO ---
  // Para exibir o nome da empresa na coluna "Alvo"
  companyName String? 

  // REGRA MESTRA: Multi-Tenancy
  companyId String    @db.Uuid

  createdAt DateTime @default(now())

  @@index([companyId])
  @@index([companyId, createdAt])
  @@map("audit_logs")
}