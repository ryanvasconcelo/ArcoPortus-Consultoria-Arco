services:
  # Serviço do Banco de Dados
  arcoportus_db:
    image: postgres:15-alpine
    container_name: arcoportus_postgres_db
    restart: always
    env_file:
      - ./.env # Carrega as variáveis do nosso arquivo .env
    ports:
      - "${DB_PORT}:5432" # Usa a porta definida no .env
    volumes:
      - arcoportus-data:/var/lib/postgresql/data
    networks:
      - arcoportus-net

  # Serviço do Backend
  # Serviço do Backend (Modo Desenvolvimento)
  arcoportus_backend:
    container_name: arcoportus_backend_api
    # NÃO USA o Dockerfile complexo, usa uma imagem base e um comando direto
    image: node:18-alpine 
    working_dir: /app
    command: sh -c "npm install && npx prisma migrate deploy && npm run dev"
    restart: always
    env_file:
      - ./.env
    ports:
      - "${BACKEND_PORT}:3335"
    volumes:
      - .:/app                  # Mapeia TUDO (código, package.json, etc.)
      - /app/node_modules       # Isola o node_modules
    depends_on:
      - arcoportus_db 
    networks:
      - arcoportus-net

  # Serviço do Frontend
  arcoportus_frontend:
    container_name: arcoportus_frontend_ui
    build:
      context: ../frontend # Constrói a imagem usando o Dockerfile na pasta frontend/
    restart: always
    ports:
      - "${FRONTEND_PORT}:5174"
    volumes:
      - ../frontend/src:/app/src # Monta o código-fonte para hot-reloading
    depends_on:
      - arcoportus_backend
    networks:
      - arcoportus-net

volumes:
  arcoportus-data:
    driver: local

networks:
  arcoportus-net:
    driver: bridge